f=require("fs");prc=process;prcst=prc.stdout;a=prc.argv[2];a_pf=prc.argv[3];e="utf8";if(!a_pf)process.exit(1);if(!f.existsSync(a_pf))process.exit(1);if(!a)process.exit(1);if(!f.existsSync(a))process.exit(1);console.log("[log] EzPatch Manipulation Program");pf=f.readFileSync(a_pf).toString();pf=pf.split("\n");if(pf[0].startsWith("#e ")){e=pf[0].split(" ")[1];pf=f.readFileSync(a_pf).toString();pf=pf.split("\n");pf.splice(0,1);pf=pf.join("\n");pf=Buffer.from(pf);pf=pf.toString(e);pf=pf.split("\n")}of=f.readFileSync(a).toString(e);of=of.split("\n");res=new Array(Math.max(pf.length,of.length));res.fill("");for(let block in of){prcst.write(`\r[log] Processed block ${block}/${of.length} (${(block/of.length*100).toFixed(2)}%)`);res[block]=of[block]}prcst.write(`\r[log] Processed block ${of.length}/${of.length} (100.00%)\r\n`);ptr=0;while(ptr!=Math.max(pf.length,of.length)){if(!pf[ptr])pf[ptr]="";if(!res[ptr])res[ptr]="";if(pf[ptr].startsWith("#skiplines ")){a=1;lock=pf[ptr];while(a!=Number(lock.split(" ")[1])){pf.splice(ptr+1,0,"");a++}ptr=ptr+Number(lock.split(" ")[1])-1}else if(pf[ptr].startsWith("#removeline ")||pf[ptr]=="#removeline"){res.splice(ptr,1);pf.splice(ptr,1);ptr--}else if(pf[ptr].startsWith("#removelines ")){lock=pf[ptr];a=0;while(a!=Number(lock.split(" ")[1])){res.splice(ptr,1);a++}pf.splice(ptr,1);ptr--}else if(pf[ptr].startsWith("#")){pf.splice(ptr,1);ptr--}else if(pf[ptr].startsWith("\\#")){pf[ptr]=pf[ptr].replace("\\#","#");res.splice(ptr,0,pf[ptr])}else if(pf[ptr]){res.splice(ptr,0,pf[ptr])}prcst.write(`\r[log] Processed command ${ptr}/${pf.length} (${(ptr/pf.length*100).toFixed(2)}%)`);ptr++}prcst.write(`\r[log] Processed command ${ptr}/${pf.length} (${(ptr/pf.length*100).toFixed(2)}%)\r\n`);try{f.writeFileSync(a+".patched",Buffer.from(res.join("\n"),e))}catch{process.exit(1)}